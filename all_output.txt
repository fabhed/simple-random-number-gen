For this task, we will use Flask, a micro web framework written in Python. It is classified as a microframework because it does not require particular tools or libraries. It has no database abstraction layer, form validation, or any other components where pre-existing third-party libraries provide common functions.

Here are the core files, classes, and functions that will be necessary:

1. `app.py`: This is the main entry point of our application. It will contain the Flask application instance and the route for generating random numbers.

2. `templates/index.html`: This is the HTML template for our website. It will display the random number generated by our Flask application.

3. `requirements.txt`: This file will list all the Python dependencies that our application needs to run.

Let's start with the `app.py` file:

app.py
```python
from flask import Flask, render_template
import random

app = Flask(__name__)

@app.route('/')
def home():
    # Generate a random number between 1 and 100
    random_number = random.randint(1, 100)
    # Render the index.html template and pass the random number to it
    return render_template('index.html', number=random_number)

if __name__ == '__main__':
    app.run(debug=True)
```

Next, let's create the `index.html` file in the `templates` directory:

templates/index.html
```html
<!DOCTYPE html>
<html>
<head>
    <title>Random Number Generator</title>
</head>
<body>
    <h1>Random Number Generator</h1>
    <p>Your random number is: {{ number }}</p>
</body>
</html>
```

Finally, let's create the `requirements.txt` file:

requirements.txt
```txt
Flask==1.1.2
```

To run this application, you would first install the dependencies with `pip install -r requirements.txt`, then run the application with `python app.py`. The application will start a web server that listens on `http://localhost:5000`, and visiting this URL with a web browser will display a webpage with a random number between 1 and 100.